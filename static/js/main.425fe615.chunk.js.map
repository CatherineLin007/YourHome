{"version":3,"sources":["Choices.js","StateMachine.js","App.js","index.js"],"names":["Choices","props","choices2result","state","current","dataSet","question","answers","isModel","scales","rotation","rotations","choices","finished","final_result","lastClick","results","model","position","THREE","object","useLoader","GLTFLoader","scene","scale","environment","cameraPos","handleClick","bind","choice","time","Date","now","this","console","log","length","setState","String","icon","class","src","height","style","marginLeft","marginTop","onClick","window","location","reload","alt","modelConf","className","camera","fallback","Html","angle","penumbra","OrbitControls","enableZoom","enableDamping","enablePan","minPolarAngle","Math","PI","maxPolarAngle","Environment","preset","background","Preload","all","Component","resModel","pressed","Model","myMesh","React","useRef","useFrame","clock","gltf","ref","firstScript","textAlign","fontFamily","cursorRenderer","cursor","text","eraseDelay","speed","secondScript","typingDelay","intensity","StateMachine","start","end","parentStart","setStart","notSetParent","href","App","finish","addSpeed","document","querySelector","playbackRate","cube","fakeCube","videoPlay","autoPlay","muted","loop","id","type","addEventListener","reduceSpeed","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.425fe615.chunk.js","sourcesContent":["import \"./Choices.css\";\nimport React, { Component, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { Environment, Html, OrbitControls, useGLTF } from \"@react-three/drei\";\nimport { Preload } from '@react-three/drei'\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Suspense } from \"react\";\nimport { Glitch, EffectComposer } from \"@react-three/postprocessing\";\nimport ReactTypingEffect from 'react-typing-effect';\n\n\n\n\nexport default class Choices extends Component {\n    constructor(props) {\n        super(props);\n\n        var dataSet = [\n            {\n                question: \"Q1\",\n                answers: [\"evening_dress_1894/scene1.gltf\", \"floral_dress/scene3.gltf\"],\n                isModel: true,\n                scales: [2, 4],\n                rotation: true\n            },\n            {\n                question: \"Q3\",\n                answers: [\"Q1/A/scene10.gltf\", \"Q1/B/scene2.gltf\"],\n                isModel: true,\n                scales: [43, 1.9],\n                rotation: false,\n                rotations: [-3.05, -0.05]\n            },\n            {\n                question: \"Q2\",\n                answers: [\"collection/1/scene4.gltf\", \"collection/2/scene3.gltf\"],\n                isModel: true,\n                scales: [1500, 150],\n                rotation: true\n            },\n            {\n                question: \"Q4\",\n                answers: [\"arch/2/scene.gltf\", \"arch/1/scene.gltf\"],\n                isModel: true,\n                scales: [22, 6],\n                rotation: true\n            }\n        ];\n\n        this.choices2result = {\n            \"0000\": 4,\n            \"0001\": 1,\n            \"0010\": 2,\n            \"0011\": 4,\n            \"0100\": 3,\n            \"0101\": 4,\n            \"0110\": 2,\n            \"0111\": 1,\n            \"1000\": 2,\n            \"1001\": 1,\n            \"1010\": 3,\n            \"1011\": 4,\n            \"1100\": 2,\n            \"1101\": 1,\n            \"1110\": 3,\n            \"1111\": 4\n        }\n\n        this.state = {\n            current: 0,\n            dataSet: dataSet,\n            choices: \"1110\",\n            finished: false,\n            final_result: 0,\n            lastClick: 0,\n            results: [\n                {model:(<mesh position={new THREE.Vector3(0, -5, -5)}>\n                    <primitive object={useLoader(GLTFLoader, \"results/1/scene_1.gltf\").scene} scale={5}></primitive>\n                </mesh>), environment: \"night\", cameraPos: [-1, 0, 0]},\n                {model: (<mesh position={new THREE.Vector3(-50, -10, -100)}>\n                    <primitive object={useLoader(GLTFLoader, \"results/2/scene.gltf\").scene} scale={5}></primitive>\n                </mesh>), environment: \"park\", cameraPos: [-1, 0, 0]},\n                {model: (<mesh position={new THREE.Vector3(5, -20, 5)}>\n                <primitive object={useLoader(GLTFLoader, \"results/3/scene.gltf\").scene} scale={5}></primitive>\n            </mesh>), environment: \"park\", cameraPos: [-1, 0, 0]},\n                {model: (<mesh position={new THREE.Vector3(20, 0, -5)}>\n                <primitive object={useLoader(GLTFLoader, \"results/4/scene.gltf\").scene} scale={5}></primitive>\n            </mesh>), environment: \"park\", cameraPos: [-1, 0, 0]},\n            ]\n        };\n        this.handleClick = this.handleClick.bind(this);\n    } // end constructor\n\n    handleClick(choice) {\n        var time = Date.now();\n        if (time - this.state.lastClick < 100) {\n            console.log(\"catch\");\n            return;\n        }\n        if (this.state.current === this.state.dataSet.length - 1) {\n            this.setState({ finished: true, choices: this.state.choices + String(choice), lastClick: time });\n            console.log(this.state.choices);\n        } else {\n            this.setState({ current: this.state.current + 1, choices: this.state.choices + String(choice), lastClick: time });\n        }\n    }\n\n    componentDidMount() { }\n\n    render() {\n        var icon = (\n            <img\n                class=\"icon\"\n                src=\"https://t4.ftcdn.net/jpg/02/07/87/79/360_F_207877921_BtG6ZKAVvtLyc5GWpBNEIlIxsffTtWkv.jpg\"\n                height=\"80px\"\n                style={{ position: \"absolute\", marginLeft: \"-49vw\", marginTop: \"-48vh\" }}\n                onClick={() => window.location.reload(false)}\n                alt\n            ></img>\n        );\n\n        //if (this.state.finished) {\n        if (true) {\n            const modelConf = this.state.results[this.choices2result[this.state.choices]-1];\n            const model = modelConf.model;\n            return (\n                <div>\n                    <div className=\"App res\">\n                        <Canvas camera={{ position: modelConf.cameraPos }}>\n                            \n                            <Suspense fallback={null}>\n                            <Html>{icon}</Html>\n                                {model}\n                                <spotLight position={[1, 1, 1]} angle={0.15} penumbra={1} />\n                                <spotLight position={[-1, -1, -1]} angle={0.15} penumbra={1} />\n                                <pointLight position={[0, 5, 0]} />\n                                <OrbitControls enableZoom={false} enableDamping={true} enablePan={false} minPolarAngle={Math.PI / 2} maxPolarAngle={Math.PI / 2}></OrbitControls>\n                                <Environment preset={modelConf.environment} background></Environment>\n                                <Preload all />\n                            </Suspense>\n                        </Canvas>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div>\n                {icon}\n                <QuizArea\n                    handleClick={this.handleClick}\n                    dataSet={this.state.dataSet[this.state.current]}\n                    models={this.state.models}\n                    current={this.state.current}\n                />\n            </div>\n        );\n    }\n}\n\nfunction Question(props) {\n    var style = { marginLeft: \"100px\" };\n    return <h1 style={style}>{props.dataSet.question}</h1>;\n}\n\nfunction Answer(props) {\n    return (\n        <img\n            class=\"choice\"\n            src={props.image}\n            onClick={() => props.handleClick(props.choice)}\n            style={{ marginLeft: \"100px\", cursor: \"pointer\" }}\n        ></img>\n    );\n}\n\nfunction AnswerList(props) {\n    var answers = [];\n    for (let i = 0; i < props.dataSet.answers.length; i++) {\n        answers.push(\n            <Answer\n                choice={i}\n                handleClick={props.handleClick}\n                image={props.dataSet.answers[i]}\n            />\n        );\n    }\n\n    var style = {};\n    return <div style={style}>{answers}</div>;\n}\n\nfunction QuizArea(props) {\n    if (props.dataSet.isModel === true) {\n\n        return (\n            <div class={\"modelQuestion\" + String(props.current)}>\n\n                <div className=\"App\">\n                    <Canvas\n                        style={{ marginTop: \"-200px\" }}\n                        camera={{ position: [0, 100, 500] }}\n                    >\n                        <ambientLight intensity={0.5} />\n                        <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n                        <spotLight position={[-10, -10, -10]} angle={0.15} penumbra={1} />\n                        <pointLight position={[-10, -10, -10]} />\n                        <Html><div style={{ marginTop: \"-150px\" }}><h1>{props.dataSet.question}</h1></div></Html>\n                        <Suspense fallback={null}>\n                            <ModelAnswerList\n                                dataSet={props.dataSet}\n                                handleClick={props.handleClick}\n                                models={props.models}\n                            />\n                            <Preload all />\n                        </Suspense>\n\n                    </Canvas>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div >\n            <Question dataSet={props.dataSet} />\n\n            <AnswerList dataSet={props.dataSet} handleClick={props.handleClick} />\n        </div>\n    );\n}\n\nfunction ModelAnswerList(props) {\n    const Model = (choice) => {\n        const [hovered, setHovered] = useState(false)\n        if (props.dataSet.rotation) {\n            const myMesh = React.useRef();\n            useFrame(({ clock }) => {\n                const a = clock.getElapsedTime();\n                myMesh.current.rotation.y = a / 3;\n            });\n            const gltf = useLoader(GLTFLoader, props.dataSet.answers[choice]);\n            const shift = choice === 0 ? -250 : 250;\n            return (\n                <mesh\n                    ref={myMesh}\n                    onClick={() => { props.handleClick(choice) }}\n                    onPointerOver={() => setHovered(true)}\n                    onPointerOut={() => setHovered(false)}\n                    position={new THREE.Vector3(shift, 0, 0)}\n                    scale={hovered ? props.dataSet.scales[choice] * 1.1 : props.dataSet.scales[choice]}\n                >\n                    <primitive object={gltf.scene}></primitive>\n                </mesh>\n            );\n        }\n        else {\n            const gltf = useLoader(GLTFLoader, props.dataSet.answers[choice]);\n            const shift = choice === 0 ? -250 : 250;\n            const myMesh = React.useRef();\n            useFrame(({ clock }) => {\n                const a = clock.getElapsedTime();\n                myMesh.current.rotation.y = props.dataSet.rotations[choice];\n            });\n            return (\n                <mesh\n                    ref={myMesh}\n                    onClick={() => { props.handleClick(choice) }}\n                    onPointerOver={() => setHovered(true)}\n                    onPointerOut={() => setHovered(false)}\n                    position={new THREE.Vector3(shift, 0, 0)}\n                    scale={hovered ? props.dataSet.scales[choice] * 1.1 : props.dataSet.scales[choice]}\n                >\n                    <primitive object={gltf.scene}></primitive>\n                </mesh>\n            );\n        }\n    };\n    const Environment0 = () => {\n        return <Environment files={props.dataSet.env}></Environment>;\n    };\n    return (\n        <>\n            {Model(0)}\n            {Model(1)}\n\n        </>\n    );\n}\n\nexport function resModel(pressed) {\n    const Model = () => {\n        const myMesh = React.useRef();\n        useFrame(({ clock }) => { });\n        const gltf = useLoader(GLTFLoader, \"car/scene.gltf\");\n        return (\n            <mesh ref={myMesh} position={new THREE.Vector3(0, 300, 0)}>\n                <primitive object={gltf.scene} scale={1}></primitive>\n            </mesh>\n        );\n    };\n\n    const firstScript = (\n        <div style={{ marginTop: \"-600px\", marginLeft: \"520px\", textAlign: \"center\", fontFamily: \"Helvetica, sans-serif\" }}>\n\n            <ReactTypingEffect\n                cursorRenderer={cursor => \"\"}\n                text={['Hold down ⬆ to start your journey.']}\n                eraseDelay={10000000}\n                cursor=\"\"\n                speed={70}\n            />\n        </div>\n    )\n\n    const secondScript = (\n        <div style={{ marginTop: \"-1100px\", textAlign: \"center\", fontFamily: \"Helvetica, sans-serif\", \"font-size\": \"30px\" }}>\n            <ReactTypingEffect\n                cursorRenderer={cursor => \"\"}\n                eraseDelay={10000000}\n                cursor=\"\"\n                speed={70}\n                text={['Welcome to XX, it\\'s a channel to the Metaverse.']}\n            />\n            <br />\n            <ReactTypingEffect\n                cursorRenderer={cursor => \"\"}\n                eraseDelay={10000000}\n                cursor=\"\"\n                speed={70}\n                typingDelay={6700}\n                text={['Pay attention to the surroundings of you.']}\n            />\n            <br />\n            <ReactTypingEffect\n                cursorRenderer={cursor => \"\"}\n                eraseDelay={10000000}\n                cursor=\"\"\n                speed={70}\n                typingDelay={10000}\n                text={['Click on the mystery cube to move forward.']}\n            />\n\n        </div>\n    )\n\n    return (\n        <div className=\"App ress\">\n            <h1></h1>\n            <Canvas camera={{ position: [0, 450, -500] }}>\n                <Suspense fallback={null}>\n                    <Model></Model>\n                    <ambientLight intensity={0.5} />\n                    <spotLight position={[10, 310, 10]} angle={0.15} penumbra={1} />\n                    <spotLight position={[-10, 290, -10]} angle={0.15} penumbra={1} />\n                    <pointLight position={[-10, 290, -10]} />\n                    <Preload all />\n                </Suspense>\n                <Preload all />\n            </Canvas>\n            {!pressed && firstScript}\n            {pressed && secondScript}\n        </div>\n    );\n}","import './StateMachine.css';\nimport React, { Component } from 'react';\nimport Choices from './Choices';\nimport { Suspense } from \"react\";\n\nexport default class StateMachine extends Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            start: false,\n\t\t\tend: false,\n\t\t\tparentStart: props.setStart,\n\t\t\tnotSetParent: true\n        };\n    }\n\trender() {\n\t\tif(this.state.end){\n\t\t\treturn <div>end</div>;\n\t\t}\n\t\tif(this.state.start){\n\t\t\tif(this.state.notSetParent){\n\t\t\t\tthis.state.parentStart();\n\t\t\t\tthis.setState({notSetParent:false});\n\t\t\t}\n\t\t\treturn <Suspense fallback={null}><Choices></Choices></Suspense>;\n\t\t\t\n\t\t}\n\t\treturn (\n\t\t\t// start page\n\t\t\t<>\n\t\t\t\t<div href=\"#\" class=\"cube\" onClick={() => {this.setState({start: true});}} style={{\"marginTop\": \"250px\"}}>\n\t\t\t\t\t<div class=\"face top\"><h1 style={{marginTop:\"40%\"}}>?</h1></div>\n\t\t\t\t\t<div class=\"face bottom\"><h1 style={{marginTop:\"40%\"}}>?</h1></div>\n\t\t\t\t\t<div class=\"face left\"><h1 style={{marginTop:\"40%\"}}>?</h1></div>\n\t\t\t\t\t<div class=\"face right\"><h1 style={{marginTop:\"40%\"}}>?</h1></div>\n\t\t\t\t\t<div class=\"face front\"><h1 style={{marginTop:\"40%\"}}>?</h1></div>\n\t\t\t\t\t<div class=\"face back\"><h1 style={{marginTop:\"40%\"}}>?</h1></div>\n\t\t\t\t</div>\n                \n\t\t\t</>\n\t\t);\n\t}\n}","import './App.css';\nimport React, { Component, useState } from 'react';\nimport StateMachine from './StateMachine';\nimport { resModel } from './Choices';\n\n\n\nexport default class App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { pressed: false, start: false, finish: false };\n\t\tthis.addSpeed = this.addSpeed.bind(this);\n\t\tthis.setStart = this.setStart.bind(this);\n\t}\n\trender() {\n\t\ttry {\n\t\t\tdocument.querySelector('video').playbackRate = 1.0;\n\t\t}\n\t\tcatch { }\n\t\tconst fakeCube = (\n\t\t\t<div href=\"#\" class=\"fakecube\" style={{ \"marginTop\": \"250px\" }}>\n\t\t\t\t<div class=\"fakeface top\"></div>\n\t\t\t\t<div class=\"fakeface bottom\"></div>\n\t\t\t\t<div class=\"fakeface left\"></div>\n\t\t\t\t<div class=\"fakeface right\"></div>\n\t\t\t\t<div class=\"fakeface front\"></div>\n\t\t\t\t<div class=\"fakeface back\"></div>\n\t\t\t</div>\n\t\t)\n\t\tvar cube;\n\t\tif (this.state.pressed) {\n\t\t\tcube = <StateMachine setStart={this.setStart}></StateMachine>\n\t\t}\n\t\telse {\n\t\t\tcube = fakeCube;\n\t\t}\n\t\tconsole.log(this.state.start)\n\t\tconst videoPlay = (<video autoPlay muted loop id=\"myVideo\">\n\t\t\t<source src=\"Tube.mp4\" type=\"video/mp4\"></source>\n\t\t</video>)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!this.state.finish && videoPlay}\n\t\t\t\t{cube}\n\t\t\t\t{!this.state.start && resModel(this.state.pressed)}\n\n\t\t\t</div>\n\t\t);\n\t}\n\tcomponentDidMount() {\n\t\tdocument.addEventListener('keydown', this.addSpeed);\n\t\tdocument.addEventListener('keyup', this.reduceSpeed);\n\t}\n\taddSpeed() {\n\t\tif (this.state.start === true) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({ pressed: true })\n\t\ttry {\n\t\t\tdocument.querySelector('video').playbackRate = 3.0;\n\t\t}\n\t\tcatch { }\n\t}\n\treduceSpeed() {\n\t\ttry {\n\t\t\tdocument.querySelector('video').playbackRate = 1.0;\n\t\t}\n\t\tcatch { }\n\t}\n\tsetStart() {\n\t\tthis.setState({ start: true });\n\t}\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}